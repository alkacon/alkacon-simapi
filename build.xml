<?xml version="1.0" encoding="UTF-8"?>

<project name="Alkacon SimAPI" default="jar" basedir=".">

    <property name="version.number"             		value="0.9.6" />
    <property name="java.target.version"                value="1.5" />
	<property name="app.name" 							value="opencms" />
    
    <property name="alkacon.input" 						location="${basedir}" />
	<property name="alkacon.output" 					location="${basedir}/../BuildAlkacon" />

    <property name="alkacon.output.classes"             location="${alkacon.output}/simapi-classes" />
    <property name="alkacon.output.tests"               location="${alkacon.output}/simapi-test" />
    <property name="alkacon.output.jars"                location="${alkacon.output}/simapi-jars" />
    <property name="alkacon.output.src"                 location="${alkacon.output}/simapi-src" />

    <property name="excludes"                   		value="**/CVS/*,**/.nbattrs,**/.project,**/.classpath" />
    
    <property environment="env" />
	
	<!-- 
	  -	Checks if all required libraries are available
	  -->
    <target name="init" >
    	
        <echo message="Building Alkacon SimAPI Library ${version.number}" />
        <echo message=" " />
        <echo message="Input directory is: ${alkacon.input}" />
        <echo message="Output directory is: ${alkacon.output}/simapi-*" />
        <echo message="Java version detected: ${ant.java.version}"/>
        <echo message="Java target version: ${java.target.version}"/>
        <echo message="Java home is: ${env.JAVA_HOME}"/>
    </target>

    <target name="clean" description="Delete existing output directories">

        <delete dir="${alkacon.output.classes}" />
        <delete dir="${alkacon.output.tests}" />
        <delete dir="${alkacon.output.jars}" />
        <delete dir="${alkacon.output.src}" />
    </target>
    		
    <target name="compile" depends="init" description="Compile the classes">
    	
        <mkdir dir="${alkacon.output.classes}" />    	
    	
        <uptodate property="classesUpToDate" targetfile="${alkacon.output.jars}/alkacon-simapi-${version.number}.jar">
        	<srcfiles dir= "${alkacon.input}/src" includes="**/*.java" excludes="${build.excludes},${excludes}"/>
        	<srcfiles dir= "${alkacon.input}/src" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd,**/*.sql" excludes="${excludes}" />
        </uptodate>
            	
       	<javac
            srcdir="${alkacon.input}/src"
            destdir="${alkacon.output.classes}"
            debug="on"
            optimize="on"
            deprecation="on"
       		source="1.4"
    		target="${java.target.version}">
       		<!-- compilerarg value="-Xlint:unchecked"/ -->
       	</javac>
		
        <copy todir="${alkacon.output.classes}">
            <fileset dir="${alkacon.input}/src" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd,**/*.sql" excludes="${excludes}"/>
        </copy>              
    </target>

    <target name="jar" 
    	depends="compile" description="Generate the .jar files">
    	
        <mkdir dir="${alkacon.output.jars}" />
            	
        <jar
            jarfile="${alkacon.output.jars}/alkacon-simapi-${version.number}.jar"
            basedir="${alkacon.output.classes}"
            includes="com/alkacon/**" 
        	manifest="${basedir}/manifest.txt" /> 
    	
    </target>

    <target name="srcdist" 
    	description="Creates a source distribution ZIP">
    	
    	<echo message="Building source distribution " />
        <echo message=" " />
        <echo message="Input directory is: ${alkacon.input}" />
        <echo message="Output directory is: ${alkacon.output.src}" />
		
        <mkdir dir="${alkacon.output.src}" />                    
		
    	<delete file="${alkacon.output.src}/alkacon-simapi-${version.number}_src.zip" failonerror="no"/>
        <zip destfile="${alkacon.output.src}/alkacon-simapi-${version.number}_src.zip">
        	<zipfileset dir="${alkacon.input}/src" excludes="${excludes}" prefix="src" />
        	<zipfileset dir="${alkacon.input}/test" excludes="${excludes}" prefix="test" />
            <zipfileset dir="${alkacon.input}" includes="build.xml,manifest.txt"/>
        </zip>
    </target>
		
    <target name="compile-tests" depends="jar" description="Compile the test classes">
    	
        <mkdir dir="${alkacon.output.tests}" />    	
    	
       	<javac
            srcdir="${alkacon.input}/test"
            destdir="${alkacon.output.tests}"
            excludes="**/data/**"
            debug="on"
            optimize="on"
            deprecation="on" 
       		source="1.4"
    		target="${java.target.version}">
       	    <classpath>
     	      <fileset dir="${alkacon.output}">
     	        <include name="**/*.jar"/>
     	      </fileset>
       	    </classpath>
       	</javac>
		
        <copy todir="${alkacon.output.tests}">
            <fileset dir="${alkacon.input}/test" includes="**/*.jpg,**/*.JPG,**/*.png,**/*.gif,**/*.tif" excludes="${excludes},**/data/**"/>
        </copy>
    </target>
	
	<target name="unittests" depends="compile-tests"
		description="Runs the Junit test cases">
		
		<junit showoutput="yes" printsummary="yes" fork="yes" haltonfailure="no" haltonerror="no">
			<classpath>
				<pathelement path="${alkacon.output.tests}"/>
        	    <fileset dir="${alkacon.output}">
	       	        <include name="**/*.jar"/>
	       	    </fileset>
	       	</classpath>
			
			<formatter type="plain" />
			
			<test name="com.alkacon.simapi.TestSimapi" />			
		</junit>
	</target>
	
    <target name="tomcat.update" depends="jar" 
    	description="Copy updated files to Tomcat directory">

        <condition property="tomcat.home" value="${env.TOMCAT_HOME}">
            <available file="${env.TOMCAT_HOME}" type="dir"/>
        </condition>

        <condition property="tomcat.home" value="${env.CATALINA_HOME}">
            <available file="${env.CATALINA_HOME}" type="dir"/>
        </condition>

    	<echo message="Tomcat home is: ${tomcat.home}" />        
    	<echo message="Application name is: ${app.name}" />        

    	<copy todir="${tomcat.home}/webapps/${app.name}/WEB-INF/lib">
            <fileset dir="${alkacon.output.jars}">
                <include name="*.jar"/>
            </fileset>
        </copy>     
    </target>     
</project>